@* @page "/iniciar-encomenda"
@using LI4.Data.Models
@inject NavigationManager NavigationManager
@inject LI4.Data.Services.OrderService OrderService

<link rel="stylesheet" href="css/IniciarEncomenda.css" />

<div class="encomenda-container">
    <h1>Iniciar Encomenda</h1>
    
    <div class="produto-lista">
        @foreach (var item in produtosSelecionados)
        {
            <div class="produto-item">
                <img src="assets/casas/@item.Produto.Nome.ToLower().Replace(" ", "") + ".png"" alt="@item.Produto.Nome" class="produto-imagem" />
                <div class="produto-detalhes">
                    <h2>@item.Produto.Nome</h2>
                    <p><strong>Descrição:</strong> @item.Produto.Descricao</p>
                    <p><strong>Materiais:</strong> @string.Join(", ", item.Produto.Materiais.Select(m => m.Material.Nome))</p>
                    <p><strong>Preço:</strong> @item.Produto.Preco €</p>
                    <p><strong>Disponível:</strong> @item.Produto.Quantidade unidades</p>
                    <label for="quantidade">Unidades:</label>
                    <InputNumber id="quantidade" class="input-quantidade" @bind-Value="item.Quantidade" Min="1" Max="@item.Produto.Quantidade" />
                </div>
            </div>
        }
    </div>

    <div class="form-actions">
        <button type="button" class="btn-cancelar" @onclick="NavigateToMenu">Cancelar</button>
        <button type="button" class="btn-pagar" @onclick="HandleOrder">Pagar</button>
    </div>
</div>

@code {
    private List<ProdutoSelecionado> produtosSelecionados = new();
    private string mensagem;

    public class ProdutoSelecionado
    {
        public Produto Produto { get; set; }
        public int Quantidade { get; set; }
    }

    protected override async Task OnInitializedAsync()
    {
        var produtos = await OrderService.ListarProdutosAsync();
        produtosSelecionados = produtos.Select(p => new ProdutoSelecionado
        {
            Produto = p,
            Quantidade = 0
        }).ToList();
    }

    private async Task HandleOrder()
    {
        var itensSelecionados = produtosSelecionados
            .Where(p => p.Quantidade > 0)
            .ToDictionary(p => p.Produto, p => p.Quantidade);

        if (itensSelecionados.Count == 0)
        {
            mensagem = "Selecione pelo menos um produto.";
            return;
        }

        var resultado = await OrderService.CriarEncomendaAsync(1, itensSelecionados, false);
        mensagem = resultado;
        if (resultado.Contains("sucesso"))
        {
            NavigationManager.NavigateTo("/pagamento");
        }
    }

    private void NavigateToMenu()
    {
        NavigationManager.NavigateTo("/menucliente");
    }
} *@
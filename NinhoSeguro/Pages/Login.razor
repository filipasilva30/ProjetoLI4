@page "/"
@using LI4.Data.Models
@inject NavigationManager NavigationManager
@inject LI4.Data.Services.LoginService LoginService

<link rel="stylesheet" href="css/Login.css" />

<div class="login-container">
    <img src="assets/logo.png" alt="Logo" class="logo" />

    <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
        <div>
            <label for="username" class="label-username">Username</label>
            <InputText id="username" @bind-Value="loginModel.Username" />
        </div>
        <div>
            <label for="password" class="label-password">Senha</label>
            <InputText id="password" @bind-Value="loginModel.Password" type="password" />
        </div>
        <div class="actions">
            <button type="submit">Iniciar sessão</button>
            <button type="button" @onclick="NavigateToRegister">Registar</button>
        </div>
    </EditForm>

    @if (!string.IsNullOrEmpty(loginMessage))
    {
        <div class="login-message">@loginMessage</div>
    }
</div>

@code {
    private LoginModel loginModel = new LoginModel();
    private string? loginMessage;

    private async Task HandleLogin()
    {
        var (sucesso, mensagem, tipo, _) = await LoginService.IniciarSessaoAsync(loginModel);

        if (sucesso)
        {
            // Redireciona para o menu correto com base no tipo de utilizador
            if (tipo == 1) // Cliente
            {
                NavigationManager.NavigateTo("/menucliente");
            }
            else if (tipo == 2) // Funcionário
            {
                NavigationManager.NavigateTo("/menufuncionario");
            }
            else
            {
                loginMessage = "Tipo de utilizador não reconhecido.";
            }
        }
        else
        {
            // Mostra mensagem de erro no login
            loginMessage = mensagem;
        }
    }

    private void NavigateToRegister()
    {
        NavigationManager.NavigateTo("/registo");
    }
}
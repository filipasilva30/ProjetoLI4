@page "/registo"
@using LI4.Data.Models
@inject NavigationManager NavigationManager
@inject LI4.Data.Services.RegisterService RegisterService

<link rel="stylesheet" href="css/Registo.css" />

@if (!string.IsNullOrEmpty(registerMessage))
{
    <div class="warning-container">
        @registerMessage
        <button class="warning-close" @onclick="() => registerMessage = null">×</button>
    </div>
}
<img src="assets/user.png" alt="Imagem de Registo" class="imagem-registo" />


<EditForm Model="@registerModel" OnValidSubmit="@HandleRegister">
    <DataAnnotationsValidator />

    <div class="form-container">
        <div class="left-column">
            <div class="form-group">
                <label for="fullName">Insira o seu nome completo<span class="asterisk">*</span></label>
                <InputText id="fullName" class="input" @bind-Value="registerModel.FullName" />
                <ValidationMessage For="@(() => registerModel.FullName)" />
            </div>
            <div class="form-group">
                <label for="username">Escolha um username<span class="asterisk">*</span></label>
                <InputText id="username" class="input" @bind-Value="registerModel.Username" />
                <ValidationMessage For="@(() => registerModel.Username)" />
            </div>
            <div class="form-group">
                <label for="email">Insira o seu correio eletrónico<span class="asterisk">*</span></label>
                <InputText id="email" class="input" @bind-Value="registerModel.Email" />
                <ValidationMessage For="@(() => registerModel.Email)" />
            </div>
        </div>
        <div class="right-column">
            <div class="form-group">
                <label for="password">Defina uma password<span class="asterisk">*</span></label>
                <InputText id="password" type="password" class="input" @bind-Value="registerModel.Password" />
                <ValidationMessage For="@(() => registerModel.Password)" />
            </div>
            <div class="form-group">
                <label for="phone">Insira um contacto telefónico<span class="asterisk">*</span></label>
                <InputText id="phone" class="input" @bind-Value="registerModel.Phone" />
                <ValidationMessage For="@(() => registerModel.Phone)" />
            </div>
            <div class="form-group">
                <label for="nif">Insira o seu NIF<span class="asterisk">*</span></label>
                <InputText id="nif" class="input" @bind-Value="registerModel.NIF" />
                <ValidationMessage For="@(() => registerModel.NIF)" />
            </div>
        </div>
    </div>

    <div class="form-actions">
        <button type="submit" class="btn btn-primary">Registar</button>
        <button type="button" class="btn btn-secondary" @onclick="NavigateToHome">Cancelar</button>
        <div class="form-obrigatorio">
            <p><span class="asterisk">(*) </span> Campo obrigatório</p>
        </div>
    </div>
</EditForm>


@code {
    private RegisterModel registerModel = new RegisterModel();
    private string? registerMessage;

    private async Task HandleRegister()
    {
        var result = await RegisterService.RegistarClienteAsync(registerModel);

        if (result == "Cliente registado com sucesso!")
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            // Mostra a mensagem de erro na interface
            registerMessage = result;
        }
    }

    private void NavigateToHome()
    {
        NavigationManager.NavigateTo("/");
    }
}
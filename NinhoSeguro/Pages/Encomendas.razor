@page "/encomendas"
@using LI4.Data.Models
@inject NavigationManager NavigationManager
@inject LI4.Data.Services.OrderService OrderService

<link rel="stylesheet" href="css/Encomendas.css" />

<div class="tabela-container">
    <h1 class="titulo">Encomendas</h1>

    @if (encomendas == null || encomendas.Count == 0)
    {
        <h1 class='semencomendas'>Não há encomendas disponíveis de momento.</h1>
    }
    else
    {
        <table>
            <thead>
                <tr>
                    <th>Em espera</th>
                    <th>Em produção</th>
                    <th>Entregue</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        @foreach (var encomenda in encomendas.Where(e => e.Estado == "Em espera"))
                        {
                            <p @onclick="() => IrParaEncomenda(encomenda.Numero)">
                                Encomenda #@encomenda.Numero
                            </p>
                        }
                    </td>
                    <td>
                        @foreach (var encomenda in encomendas.Where(e => e.Estado == "Em produção"))
                        {
                            <p @onclick="() => IrParaEncomenda(encomenda.Numero)">
                                Encomenda #@encomenda.Numero
                            </p>
                        }
                    </td>
                    <td>
                        @foreach (var encomenda in encomendas.Where(e => e.Estado == "Entregue"))
                        {
                            <p @onclick="() => IrParaEncomenda(encomenda.Numero)">
                                Encomenda #@encomenda.Numero
                            </p>
                        }
                    </td>
                </tr>
            </tbody>
        </table>
    }

    <button class="botao-voltar" @onclick="VoltarMenu">Voltar</button>
</div>

@code {
    private List<Encomenda> encomendas = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            encomendas = await OrderService.ListarTodasEncomendasAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erro ao carregar encomendas: {ex.Message}");
        }
    }

    private void VoltarMenu()
    {
        NavigationManager.NavigateTo("/menufuncionario");
    }

    private void IrParaEncomenda(int id)
    {
        NavigationManager.NavigateTo($"/encomenda/{id}");
    }
}